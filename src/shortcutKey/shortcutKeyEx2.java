package shortcutKey;
// 응용편(상황별 단축키)
// 테스트 코드
// 디버깅
// 리팩토링
// 커스텀 단축키 설정하기
public class shortcutKeyEx2 {
    // >>>>>>>>>>>>>>>> 테스트 코드 <<<<<<<<<<<<<<<<<
    // 테스트 코드 생성: Alt + Enter // 알아서 디렉토리까지 생성해줌
    // 테스트코드 생성할 클래스명에 커서 놓고 Alt + Enter >> Create Test 선택 >> 라이브러리, 테스트할 메소드 선택
    //
    // 테스트 코드 이동 및 원래 코드로 이동: Ctrl + Shift + T
    // >> 테스트 코드가 없는 로직에서 이 단축키를 누르면 Create Test 옵션이 나옴
    //
    // 선택된 테스트 실행: Ctrl + Shift + F10 (일반적인 실행키와 동일함)
    // 중단: F2
    // >>>>>>>>>>>>>>>> 리팩토링 <<<<<<<<<<<<<<<<<
    // *********** 리팩토링 리스트 전체 보기: Ctrl + Alt + Shift + T **********
    //
    // 해당 코드 다른 클래스로 이동: F6
    // 해당 클래스를 import하고 있는 모든 코드들도 이동할 수 있음
    //
    // 변수의 타입 변경: Ctrl + Shift + F6
    //
    // 메소드 시그니처 변경: Ctrl + F6
    // 
    // 단순히 변수명 변경: Shift + F6 // 바꾸다가 좀 아니다 싶으면 esc 누르면 원복
    // replace와는 조금 다르게, 다른 위치에 있는 같은 변수명 함께 바뀐다.
    //
    // >>>>>>>>>>>>>>>> 디버깅 <<<<<<<<<<<<<<<<<
    // 브레이크 포인트 설정: Ctrl + F8
    //
    // 설정된 브레이크 포인트 전부 보기: Ctrl + Shift + F8
    //
    // 디버깅 모드 실행: Shift + F9
    // cf. 현재 에디터 디버깅 모드 실행단축키는 윈도우에는 없음
    //      우측 상단에서 실행할 클래스 바꾸고 위에 벌레 모양 아이콘 직접 클릭해야함
    //
    // step into(실행 라인 이동): F7, F8 한 뎁스 깊게 들어가기(?? 무슨 말인지 모르겠음)
    // step over(다음 라인 이동): F7, F8
    // resume program: F9
    //
    // git 관련 기능: Alt + ` // 단순한 commit 등은 사용 가능함
    //
    // >>>>>>>>>>>>>>>> 커스텀 단축키 <<<<<<<<<<<<<<<<<
    // Shift 두 번 눌러서 keymap 검색 > keymap > 키맵 구성
    //
}
